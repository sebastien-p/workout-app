import { Component, ViewChild } from '@angular/core';
import { NavParams, ViewController, Content } from 'ionic-angular';

import { DisplayWorkout } from '../../models/workout.model';
import { DisplaySet } from '../../models/set.model';
import { WorkoutsService } from '../../services/workouts.service';
import { ItemModalPage } from '../item-modal.page';

type SeriePredicate = (currentSerie: number, series: number) => boolean;
type SetPredicate = (currentSet: number, sets: number) => boolean;
type SerieIncrementer = (series: number) => number;

@Component({
  selector: 'page-exploit-workout',
  templateUrl: 'exploit-workout.page.html'
})
export class ExploitWorkoutPage
extends ItemModalPage<DisplayWorkout, WorkoutsService> { // FIXME
  currentSet: number = 0;
  currentSerie: number = 1;

  @ViewChild(Content)
  private readonly content: Content;

  constructor(
    navParams: NavParams,
    viewController: ViewController,
    workoutsService: WorkoutsService
  ) {
    super(
      navParams,
      viewController,
      workoutsService
    );
  }

  get current(): DisplaySet {
    return this.item.sets[this.currentSet];
  }

  showPrevious(): void {
    this.goTo(
      currentSerie => currentSerie > 1,
      currentSet => currentSet > 0,
      series => series,
      -1
    );
  }

  showNext(): void {
    this.goTo(
      (currentSerie, series) => currentSerie < series,
      (currentSet, sets) => currentSet < sets,
      () => 1,
      1
    );
  }

  private goTo(
    shouldIncrementSerie: SeriePredicate,
    shouldIncrementSet: SetPredicate,
    incrementSerie: SerieIncrementer,
    increment: number
  ): void {
    const current = this.current;
    if (!current) { return; }
    if (shouldIncrementSerie(this.currentSerie, current.series)) {
      this.currentSerie += increment;
    }
    else if (shouldIncrementSet(this.currentSet, this.item.sets.length - 1)) {
      this.currentSet += increment;
      this.currentSerie = incrementSerie(this.current.series);
    }
    this.content.resize();
  }
}
